{
  "version": 3,
  "sources": ["../../@keyv/redis/src/index.js"],
  "sourcesContent": ["const EventEmitter = require('events');\nconst Redis = require('ioredis');\n\nclass KeyvRedis extends EventEmitter {\n\tconstructor(uri, options) {\n\t\tsuper();\n\t\tthis.ttlSupport = true;\n\t\tthis.opts = {};\n\t\tthis.opts.dialect = 'redis';\n\n\t\tif ((uri.options && uri.options.family) || (uri.options && uri.isCluster)) {\n\t\t\tthis.redis = uri;\n\t\t} else {\n\t\t\toptions = {...(typeof uri === 'string' ? {uri} : uri), ...options};\n\t\t\tthis.redis = new Redis(options.uri, options);\n\t\t}\n\n\t\tthis.redis.on('error', error => this.emit('error', error));\n\t}\n\n\t_getNamespace() {\n\t\treturn `namespace:${this.namespace}`;\n\t}\n\n\tget(key) {\n\t\treturn this.redis.get(key)\n\t\t\t.then(value => {\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t});\n\t}\n\n\tgetMany(keys) {\n\t\treturn this.redis.mget(keys)\n\t\t\t.then(rows => rows);\n\t}\n\n\tset(key, value, ttl) {\n\t\tif (typeof value === 'undefined') {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\tif (typeof ttl === 'number') {\n\t\t\t\t\treturn this.redis.set(key, value, 'PX', ttl);\n\t\t\t\t}\n\n\t\t\t\treturn this.redis.set(key, value);\n\t\t\t})\n\t\t\t.then(() => this.redis.sadd(this._getNamespace(), key))\n\t\t\t.then(() => undefined);\n\t}\n\n\tdelete(key) {\n\t\treturn this.redis.del(key)\n\t\t\t.then(items => this.redis.srem(this._getNamespace(), key)\n\t\t\t\t.then(() => items > 0));\n\t}\n\n\tdeleteMany(key) {\n\t\treturn this.delete(key);\n\t}\n\n\tclear() {\n\t\treturn this.redis.smembers(this._getNamespace())\n\t\t\t.then(keys => this.redis.del([...keys, this._getNamespace()]))\n\t\t\t.then(() => undefined);\n\t}\n\n\tasync * iterator(namespace) {\n\t\tconst scan = this.redis.scan.bind(this.redis);\n\t\tconst get = this.redis.mget.bind(this.redis);\n\t\tasync function * iterate(curs, pattern) {\n\t\t\tconst [cursor, keys] = await scan(curs, 'MATCH', pattern);\n\n\t\t\tif (keys.length > 0) {\n\t\t\t\tconst values = await get(keys);\n\t\t\t\tfor (const [i] of keys.entries()) {\n\t\t\t\t\tconst key = keys[i];\n\t\t\t\t\tconst value = values[i];\n\t\t\t\t\tyield [key, value];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cursor !== '0') {\n\t\t\t\tyield * iterate(cursor, pattern);\n\t\t\t}\n\t\t}\n\n\t\tyield * iterate(0, `${namespace}:*`);\n\t}\n\n\thas(key) {\n\t\treturn this.redis.exists(key)\n\t\t\t.then(value => value !== 0);\n\t}\n\n\tdisconnect() {\n\t\treturn this.redis.disconnect();\n\t}\n}\n\nmodule.exports = KeyvRedis;\n"],
  "mappings": ";;;;;;;;;;;AAAA;AAAA;AAAA,QAAM,eAAe;AACrB,QAAM,QAAQ;AAEd,QAAM,YAAN,cAAwB,aAAa;AAAA,MACpC,YAAY,KAAK,SAAS;AACzB,cAAM;AACN,aAAK,aAAa;AAClB,aAAK,OAAO,CAAC;AACb,aAAK,KAAK,UAAU;AAEpB,YAAK,IAAI,WAAW,IAAI,QAAQ,UAAY,IAAI,WAAW,IAAI,WAAY;AAC1E,eAAK,QAAQ;AAAA,QACd,OAAO;AACN,oBAAU,EAAC,GAAI,OAAO,QAAQ,WAAW,EAAC,IAAG,IAAI,KAAM,GAAG,QAAO;AACjE,eAAK,QAAQ,IAAI,MAAM,QAAQ,KAAK,OAAO;AAAA,QAC5C;AAEA,aAAK,MAAM,GAAG,SAAS,WAAS,KAAK,KAAK,SAAS,KAAK,CAAC;AAAA,MAC1D;AAAA,MAEA,gBAAgB;AACf,eAAO,aAAa,KAAK;AAAA,MAC1B;AAAA,MAEA,IAAI,KAAK;AACR,eAAO,KAAK,MAAM,IAAI,GAAG,EACvB,KAAK,WAAS;AACd,cAAI,UAAU,MAAM;AACnB,mBAAO;AAAA,UACR;AAEA,iBAAO;AAAA,QACR,CAAC;AAAA,MACH;AAAA,MAEA,QAAQ,MAAM;AACb,eAAO,KAAK,MAAM,KAAK,IAAI,EACzB,KAAK,UAAQ,IAAI;AAAA,MACpB;AAAA,MAEA,IAAI,KAAK,OAAO,KAAK;AACpB,YAAI,OAAO,UAAU,aAAa;AACjC,iBAAO,QAAQ,QAAQ,MAAS;AAAA,QACjC;AAEA,eAAO,QAAQ,QAAQ,EACrB,KAAK,MAAM;AACX,cAAI,OAAO,QAAQ,UAAU;AAC5B,mBAAO,KAAK,MAAM,IAAI,KAAK,OAAO,MAAM,GAAG;AAAA,UAC5C;AAEA,iBAAO,KAAK,MAAM,IAAI,KAAK,KAAK;AAAA,QACjC,CAAC,EACA,KAAK,MAAM,KAAK,MAAM,KAAK,KAAK,cAAc,GAAG,GAAG,CAAC,EACrD,KAAK,MAAM,MAAS;AAAA,MACvB;AAAA,MAEA,OAAO,KAAK;AACX,eAAO,KAAK,MAAM,IAAI,GAAG,EACvB,KAAK,WAAS,KAAK,MAAM,KAAK,KAAK,cAAc,GAAG,GAAG,EACtD,KAAK,MAAM,QAAQ,CAAC,CAAC;AAAA,MACzB;AAAA,MAEA,WAAW,KAAK;AACf,eAAO,KAAK,OAAO,GAAG;AAAA,MACvB;AAAA,MAEA,QAAQ;AACP,eAAO,KAAK,MAAM,SAAS,KAAK,cAAc,CAAC,EAC7C,KAAK,UAAQ,KAAK,MAAM,IAAI,CAAC,GAAG,MAAM,KAAK,cAAc,CAAC,CAAC,CAAC,EAC5D,KAAK,MAAM,MAAS;AAAA,MACvB;AAAA,MAEA,OAAQ,SAAS,WAAW;AAC3B,cAAM,OAAO,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK;AAC5C,cAAM,MAAM,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK;AAC3C,wBAAiB,QAAQ,MAAM,SAAS;AACvC,gBAAM,CAAC,QAAQ,IAAI,IAAI,MAAM,KAAK,MAAM,SAAS,OAAO;AAExD,cAAI,KAAK,SAAS,GAAG;AACpB,kBAAM,SAAS,MAAM,IAAI,IAAI;AAC7B,uBAAW,CAAC,CAAC,KAAK,KAAK,QAAQ,GAAG;AACjC,oBAAM,MAAM,KAAK,CAAC;AAClB,oBAAM,QAAQ,OAAO,CAAC;AACtB,oBAAM,CAAC,KAAK,KAAK;AAAA,YAClB;AAAA,UACD;AAEA,cAAI,WAAW,KAAK;AACnB,mBAAQ,QAAQ,QAAQ,OAAO;AAAA,UAChC;AAAA,QACD;AAEA,eAAQ,QAAQ,GAAG,GAAG,aAAa;AAAA,MACpC;AAAA,MAEA,IAAI,KAAK;AACR,eAAO,KAAK,MAAM,OAAO,GAAG,EAC1B,KAAK,WAAS,UAAU,CAAC;AAAA,MAC5B;AAAA,MAEA,aAAa;AACZ,eAAO,KAAK,MAAM,WAAW;AAAA,MAC9B;AAAA,IACD;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
